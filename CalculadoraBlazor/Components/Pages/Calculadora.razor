@page "/calculadora"

@rendermode RenderMode.InteractiveServer

<div class="calculator">

    <input type="text" class="calculator-screen" disabled value="@this.CurrentValue" />
    <div class="calculator-keys">
        <button type="button" @onclick="()=>{ OnOperatorClick('+'); }" class="operator" value="+">+</button>
        <button type="button" @onclick="()=>{ OnOperatorClick('-'); }" class="operator" value="-">-</button>
        <button type="button" @onclick="()=>{ OnOperatorClick('x'); }" class="operator" value="*">&times;</button>
        <button type="button" @onclick="()=>{ OnOperatorClick('/'); }" class="operator" value="/">&divide;</button>

        <button type="button" @onclick="()=>{ OnNumberClick('4'); }" value="4">4</button>
        <button type="button" @onclick="()=>{ OnNumberClick('5'); }" value="5">5</button>
        <button type="button" @onclick="()=>{ OnNumberClick('6'); }" value="6">6</button>

        <button type="button" @onclick="()=>{ OnNumberClick('1'); }" value="1">1</button>
        <button type="button" @onclick="()=>{ OnNumberClick('2'); }" value="2">2</button>
        <button type="button" @onclick="()=>{ OnNumberClick('3'); }" value="3">3</button>

        <button type="button" @onclick="()=>{ OnNumberClick('0'); }" value="0">0</button>
        <button type="button" @onclick="()=>{ OnDecimalClick('.'); }" value=".">.</button>
        <button type="button" @onclick=OnClearClick class="all-clear" value="all-clear">AC</button>
        <button type="button" @onclick=OnEqualClick class="equal-sign operator" value="=">=</button>
    </div>
</div>

@code {
    public string? LeftValue { get; set; } = string.Empty;
    public char? OperatorValue { get; set; } 
    public string? RightValue { get; set; } = string.Empty;

    public string CurrentValue => $"{this.LeftValue} {this.OperatorValue} {this.RightValue}";

    void OnOperatorClick(char val)
    {
        this.OperatorValue = val;

    }
    void OnNumberClick(char val)
    {

        // Decidir se tem que preencher o lado esquerdo ou direito

        if (string.IsNullOrWhiteSpace(this.OperatorValue?.ToString()))
        {
            this.LeftValue = this.LeftValue + val;
            //lógica quando o operador tiver nulo...
        }
        else
        {
            this.RightValue = this.RightValue + val;
            //lógica quando o operador não tiver nulo
        }

        //this.CurrentValue += " " + val;
    }
    void OnDecimalClick(char val)
    {
        if (string.IsNullOrWhiteSpace(this.OperatorValue?.ToString()))
        {
            this.LeftValue = this.LeftValue + val;
        }
        else
        {
            
            Convert.ToDouble(this.RightValue);
             this.RightValue = this.RightValue + val;

        }
    }

    void OnClearClick()
    {
        this.LeftValue = string.Empty;
        this.OperatorValue = null;
        this.RightValue = string.Empty;
    }

    void OnEqualClick()
    {
        if (!string.IsNullOrWhiteSpace(this.LeftValue) && this.OperatorValue.HasValue && !string.IsNullOrWhiteSpace(this.RightValue))
        {
            var left = double.Parse(this.LeftValue.Replace(".",","));
            var right = double.Parse(this.RightValue.Replace(".",","));
            double result = 0;

            switch (this.OperatorValue)
            {
                case '+':
                    result = left + right;
                    break;
                case '-':
                    result = left - right;
                    break;
                case '*':
                    result = left * right;
                    break;
                case '/':
                    result = left / right;
                    break;
            }

            this.LeftValue = result.ToString();
            this.OperatorValue = null;
            this.RightValue = string.Empty;
        }
    }
}